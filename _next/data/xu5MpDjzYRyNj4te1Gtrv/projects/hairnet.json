{"pageProps":{"project":{"id":14,"slug":"hairnet","assetRoot":"projects/hairnet","title":"Hairnet","status":"complete","description":"A neural network that detects a person's face and hair","startDate":"2019-05-29T00:00:00.000Z","endDate":"2019-09-25T00:00:00.000Z","url":null,"source":["https://github.com/astralbijection/Hair-Net"],"thumbnail":"./thumbnail.png","content":"<img src=\"/_/projects/hairnet/thumbnail.png\" alt=\"Results of the CNN on a single image\">\n<p>A convolutional neural network (CNN) that can detect a person’s face and distinguish between their face and their hair. It was successfully able to accomplish this task in real time.</p>\n<p>It was originally going to be a component in an image processing pipeline that would allow the user to simulate different hairstyles. The missing components for this were:</p>\n<ul>\n<li>Another neural network that determined face pose from images, and</li>\n<li>A program that takes this hair detector’s results, takes the face pose results, and replaces the user’s hair with a 3D hair model.</li>\n</ul>\n<h2 id=\"the-network\">The network</h2>\n<p>The network was inspired by the existing <a href=\"https://github.com/shelhamer/fcn.berkeleyvision.org/tree/master/voc-fcn8s\">VOC-fcn8s</a> network, though I reduced some of the layer count parameters to make it run faster on my machine.</p>\n<p>Essentially, this network is a member of the family of networks known as <strong>Fully Convolutional Networks</strong>, or FCNs. As their name suggests, they are only composed of convolutional or deconvolutional layers.</p>\n<p>In terms of architecture, it’s a lot like an autoencoder. See the following graphic<sup id=\"fnref-cite1\"><a href=\"#fn-cite1\" class=\"footnote-ref\">cite1</a></sup> for an illustration. It shrinks the data down to a manageable size using convolutional and pooling layers. When it’s very small (7x7) it performs scoring with the center layers. In the final layers, it rescales the scores back to original size by adding data gathered from the shrinking.</p>\n<img src=\"/_/projects/hairnet/fcn.png\" alt=\"From &#x22;Supervised Classification of Multisensor Remotely Sensed Images Using a Deep Learning Framework.&#x22;\">\n<h2 id=\"improving-results-with-synthetic-data\">Improving results with synthetic data</h2>\n<p>There were many issues encountered in some of the earlier trained networks, but they were easily solved by training on a synthetic dataset generated from my training data. <a href=\"https://github.com/astralbijection/Hair-Net/blob/master/util.py\"><code>util.py</code></a> contains most of the code used to do this.</p>\n<ul>\n<li><strong>Sometimes the neural network would detect a person in an image of a wall, a <em>false positive</em></strong> - I took some random images without people’s faces in them and added them to the dataset as features, with a blank target.</li>\n<li><strong>If the person wasn’t in the center of the camera, there would be less accuracy</strong> - I randomly scaled and translated training features, and applied the same operation to their associated targets. I tried rotating the images at some point, but found that to be a bit difficult to implement at the time.</li>\n<li><strong>Blocking your face would throw the neural net completely off</strong> - I randomly occluded training features with randomly-colored, randomly-placed rectangles.</li>\n</ul>\n<h2 id=\"possibly-going-further\">Possibly going further</h2>\n<p>I could potentially host this neural net on a webpage using <a href=\"https://www.tensorflow.org/js\">Tensorflow.js</a>.</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-cite1\">“Fully convolutional neural network architecture (FCN-8)” by Piramanayagam et al. is licensed under <a href=\"https://creativecommons.org/licenses/by/4.0/\">CC BY 4.0</a><a href=\"#fnref-cite1\" class=\"footnote-backref\">↩</a></li>\n</ol>\n</div>","tags":["data-science","image-processing","keras","opencv","python","tensorflow"]},"similar":[{"slug":"tanksberry-pi","title":"Tanksberry Pi"},{"slug":"inventree","title":"Inventree"},{"slug":"astrid-tech","title":"astrid.tech"}]},"__N_SSG":true}