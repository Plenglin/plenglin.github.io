{"pageProps":{"post":{"id":18,"assetRoot":"2020/06/18","thumbnail":null,"title":"Down-shifting and filtering a signal","description":"Because the FPGA is fast, but not *that* fast","slug":"freq-shift","date":"2020-06-18T00:00:00.000Z","content":"<h2 id=\"introduction\">Introduction</h2>\n<p>When I was taking Computer Architecture, I needed an FPGA for the class,\nand a <a href=\"https://store.digilentinc.com/basys-3-artix-7-fpga-trainer-board-recommended-for-introductory-users/\">Basys 3</a>\nin particular. In any other year, I would have probably borrowed it\nfrom Cal Poly to take computer architecture. However,\ndue to the pandemic, I had to spend money and buy it myself.\nThat thing is $150 - it ain’t cheap!</p>\n<p>Now that class is over, I had this board and I wanted to do\nsomething with it. I didn’t want to do something that any\nordinary microcontroller could do because that’s boring, in that case I would\njust use a microcontroller. No, I wanted to make something that\n<em>requires</em> a FPGA.</p>\n<p>So, I thought of making a direct sampling software-defined\nradio. It won’t have a transmit function, only a receive\nfunction, because I have no idea how to do power electronics.\nIts main purpose would be basically as an ultra\nwide band scanner (I’m thinking of trying to make it scan\na 50 MHz section all at once).</p>\n<h2 id=\"problem-parameters\">Problem parameters</h2>\n<p>The FPGA has a <strong>100 MHz internal clock</strong> for most computations, and I\nwant to scan the spectrum of frequencies <strong>between 125 and 175 MHz.</strong>\nTherefore, by the Nyquist-Shannon theorem, I will need at least\ntwice that - 325 MSPS (million samples per second) coming in.</p>\n<p>I’ve figured out a possible way to get <strong>400 MSPS at an 8 bit\nresolution</strong> into the FPGA. This involves going above 100 MHz, and\nthis will likely be elaborated on in the future. But for now, we’ll just\nassume for now that that’s the data stream coming in. So, every 100 MHz\nclock, we get 4 x 8-bit samples. We are dealing with a theoretical\ndata rate of 3.2 Gbps, and <em>this</em> is why we need an FPGA.</p>\n<h2 id=\"generating-a-raw-signal\">Generating a “raw signal”</h2>\n<p>Let’s make a signal with lots of different frequency components that we can use for experimenting with. It should reveal why we need to pre-process the signal before FFT.</p>\n<div class=\"remark-highlight\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n\n\n<span class=\"token comment\"># Configuration so that y'all actually see this stuff</span>\nplt<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'figure.figsize'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span>\n\nM_SAMPLES_PER_SECOND <span class=\"token operator\">=</span> <span class=\"token number\">400</span>\nSAMPLES_PER_SECOND <span class=\"token operator\">=</span> M_SAMPLES_PER_SECOND <span class=\"token operator\">*</span> <span class=\"token number\">1e6</span>\nNYQUIST <span class=\"token operator\">=</span> SAMPLES_PER_SECOND <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\nSIGNAL_LENGTH <span class=\"token operator\">=</span> <span class=\"token number\">10e</span><span class=\"token operator\">-</span><span class=\"token number\">3</span>\nFFT_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">4096</span>\n\n<span class=\"token comment\"># Time domain (1 index = 1 sample at 400 MSPS)</span>\ntime <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> SIGNAL_LENGTH<span class=\"token punctuation\">,</span> SIGNAL_LENGTH <span class=\"token operator\">*</span> SAMPLES_PER_SECOND<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">tone</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> np<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> time <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">fm_tone</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> carrier<span class=\"token punctuation\">,</span> deviation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> np<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span>carrier <span class=\"token operator\">*</span> time <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">+</span> deviation <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> time <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">am_tone</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> carrier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> np<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> time <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span>carrier <span class=\"token operator\">*</span> time <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">)</span>\n\nreceived_signal <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> tone<span class=\"token punctuation\">(</span><span class=\"token number\">125e6</span><span class=\"token punctuation\">)</span>\nreceived_signal <span class=\"token operator\">+=</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> tone<span class=\"token punctuation\">(</span><span class=\"token number\">175e6</span><span class=\"token punctuation\">)</span>\nreceived_signal <span class=\"token operator\">+=</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> am_tone<span class=\"token punctuation\">(</span><span class=\"token number\">5e3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150e6</span><span class=\"token punctuation\">)</span>\nreceived_signal <span class=\"token operator\">+=</span> fm_tone<span class=\"token punctuation\">(</span><span class=\"token number\">100e3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">135e6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Add in some unwanted tones</span>\nreceived_signal <span class=\"token operator\">+=</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> tone<span class=\"token punctuation\">(</span><span class=\"token number\">100e6</span><span class=\"token punctuation\">)</span>\nreceived_signal <span class=\"token operator\">+=</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> tone<span class=\"token punctuation\">(</span><span class=\"token number\">120e6</span><span class=\"token punctuation\">)</span>\nreceived_signal <span class=\"token operator\">+=</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> fm_tone<span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180e6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4e3</span><span class=\"token punctuation\">)</span>\nreceived_signal <span class=\"token operator\">+=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> fm_tone<span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50e6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1e5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># An increasing frequency tone to act as an indicator</span>\nreceived_signal <span class=\"token operator\">+=</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">*</span> <span class=\"token number\">100e6</span> <span class=\"token operator\">/</span> SIGNAL_LENGTH<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> time <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Add in some noise for the heck of it</span>\nreceived_signal <span class=\"token operator\">+=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nbin_size_0 <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> M_SAMPLES_PER_SECOND <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">/</span> FFT_SIZE\n\nplt<span class=\"token punctuation\">.</span>specgram<span class=\"token punctuation\">(</span>received_signal<span class=\"token punctuation\">,</span> FFT_SIZE<span class=\"token punctuation\">,</span> M_SAMPLES_PER_SECOND<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Bin size: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>bin_size_0<span class=\"token punctuation\">:</span><span class=\"token format-spec\">02.3f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> kHz'</span></span><span class=\"token punctuation\">)</span>\n\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Full signal (</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>bin_size_0<span class=\"token punctuation\">:</span><span class=\"token format-spec\">02.3f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> kHz bins)\"</span></span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'frequency (MHz)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'time (us)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">Bin size: 48.828 kHz</code></pre></div>\n<img src=\"/_/2020/06/18/freq-shift_files/freq-shift_1_1.png\" alt=\"png\">\n<p>Once again, we only care about the 125-175MHz range! We don’t care about anything outside of that! So, all those wonky sine waves I added in are essentially junk data.</p>\n<p>Notice that the bin size is 50 kHz. Extremely thick.\nNarrowband FM on a Baofeng UV-5R is 12.5kHz, and it’s likely even smaller for other radios.\nWe won’t be able to see individual channels, just a group of 4 channels or more.</p>\n<p>This is the motivation behind preprocessing the signal. We want to essentially zoom in\non the 125-175MHz range so that our FFT can be much more precise for the same amount of\ncomputation.</p>\n<h2 id=\"shifting-the-signal-downwards\">Shifting the signal downwards</h2>\n<h3 id=\"bandpass\">Bandpass</h3>\n<p>First, we apply a bandpass filter with cutoffs at 120MHz and 180MHz. They\nare somewhat offset from the frequencies we want so that we have a little\nbuffer space at the ends.</p>\n<div class=\"remark-highlight\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> scipy <span class=\"token keyword\">import</span> signal\n\nbp_filter <span class=\"token operator\">=</span> signal<span class=\"token punctuation\">.</span>butter<span class=\"token punctuation\">(</span>\n    <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">120e6</span> <span class=\"token operator\">/</span> NYQUIST<span class=\"token punctuation\">,</span> <span class=\"token number\">180e6</span> <span class=\"token operator\">/</span> NYQUIST<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'band'</span><span class=\"token punctuation\">,</span>\n    analog<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n    output<span class=\"token operator\">=</span><span class=\"token string\">'sos'</span>\n<span class=\"token punctuation\">)</span>\nw<span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> signal<span class=\"token punctuation\">.</span>sosfreqz<span class=\"token punctuation\">(</span>bp_filter<span class=\"token punctuation\">,</span> fs<span class=\"token operator\">=</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>log10<span class=\"token punctuation\">(</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Frequency response of the bandpass filter\"</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'response (dB)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'frequency (MHz)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<img src=\"/_/2020/06/18/freq-shift_files/freq-shift_3_0.png\" alt=\"png\">\n<div class=\"remark-highlight\"><pre class=\"language-python\"><code class=\"language-python\">bp_sig <span class=\"token operator\">=</span> signal<span class=\"token punctuation\">.</span>sosfilt<span class=\"token punctuation\">(</span>bp_filter<span class=\"token punctuation\">,</span> received_signal<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>specgram<span class=\"token punctuation\">(</span>bp_sig<span class=\"token punctuation\">,</span> FFT_SIZE<span class=\"token punctuation\">,</span> M_SAMPLES_PER_SECOND<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Post-Bandpass Signal\"</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'frequency (MHz)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'time (us)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<img src=\"/_/2020/06/18/freq-shift_files/freq-shift_4_0.png\" alt=\"png\">\n<h3 id=\"mixing-for-shifting\">Mixing for Shifting</h3>\n<p>Next, we mix with a 115MHz signal. For a signal with frequency <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span>, this should\nproduce two signals, one at <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>−</mo><mn>115</mn><mtext>MHz</mtext></mrow><annotation encoding=\"application/x-tex\">f - 115\\text{MHz}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">115</span><span class=\"mord text\"><span class=\"mord\">MHz</span></span></span></span></span></span>, and the other reflected\nat <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>115</mn><mtext>MHz</mtext><mo>−</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo>−</mo><mn>115</mn><mtext>MHz</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">115\\text{MHz} - (f - 115\\text{MHz})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">115</span><span class=\"mord text\"><span class=\"mord\">MHz</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">115</span><span class=\"mord text\"><span class=\"mord\">MHz</span></span><span class=\"mclose\">)</span></span></span></span></span>.</p>\n<div class=\"remark-highlight\"><pre class=\"language-python\"><code class=\"language-python\">mixed <span class=\"token operator\">=</span> bp_sig <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span><span class=\"token number\">115e6</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">*</span> time<span class=\"token punctuation\">)</span>\n\nplt<span class=\"token punctuation\">.</span>specgram<span class=\"token punctuation\">(</span>mixed<span class=\"token punctuation\">,</span> FFT_SIZE<span class=\"token punctuation\">,</span> M_SAMPLES_PER_SECOND<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Post-mixing signal\"</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'frequency (MHz)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'time (us)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<img src=\"/_/2020/06/18/freq-shift_files/freq-shift_6_0.png\" alt=\"png\">\n<h3 id=\"lowpass\">Lowpass</h3>\n<p>We now perform a low pass to keep the low-frequency signal and get rid of its evil high-frequency twin.\nThe 10-60MHz range here is the equivalent of the original’s 125-175MHz range, so we’ll do a 65MHz\nlowpass.</p>\n<div class=\"remark-highlight\"><pre class=\"language-python\"><code class=\"language-python\">lp_filter <span class=\"token operator\">=</span> signal<span class=\"token punctuation\">.</span>butter<span class=\"token punctuation\">(</span>\n    <span class=\"token number\">27</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">65e6</span> <span class=\"token operator\">/</span> NYQUIST<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'lowpass'</span><span class=\"token punctuation\">,</span>\n    output<span class=\"token operator\">=</span><span class=\"token string\">'sos'</span>\n<span class=\"token punctuation\">)</span>\nw<span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> signal<span class=\"token punctuation\">.</span>sosfreqz<span class=\"token punctuation\">(</span>lp_filter<span class=\"token punctuation\">,</span> fs<span class=\"token operator\">=</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>log10<span class=\"token punctuation\">(</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Frequency response of the lowpass filter\"</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'response (dB)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'frequency (MHz)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<img src=\"/_/2020/06/18/freq-shift_files/freq-shift_8_0.png\" alt=\"png\">\n<div class=\"remark-highlight\"><pre class=\"language-python\"><code class=\"language-python\">lp_sig <span class=\"token operator\">=</span> signal<span class=\"token punctuation\">.</span>sosfilt<span class=\"token punctuation\">(</span>lp_filter<span class=\"token punctuation\">,</span> mixed<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>specgram<span class=\"token punctuation\">(</span>lp_sig<span class=\"token punctuation\">,</span> FFT_SIZE<span class=\"token punctuation\">,</span> M_SAMPLES_PER_SECOND<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Post-lowpass signal\"</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'frequency (MHz)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'time (us)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<img src=\"/_/2020/06/18/freq-shift_files/freq-shift_9_0.png\" alt=\"png\">\n<h3 id=\"decimation\">Decimation</h3>\n<p>Finally, we decimate to get rid of what we don’t want. Decimating by a\nfactor of 3 means that the frequencies included here are between 0-67MHz\npost-mixing, which is 120-177MHz on the original.</p>\n<div class=\"remark-highlight\"><pre class=\"language-python\"><code class=\"language-python\">decimate <span class=\"token operator\">=</span> signal<span class=\"token punctuation\">.</span>decimate<span class=\"token punctuation\">(</span>lp_sig<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nbin_size_1 <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>M_SAMPLES_PER_SECOND <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">/</span> FFT_SIZE\n\nplt<span class=\"token punctuation\">.</span>specgram<span class=\"token punctuation\">(</span>decimate<span class=\"token punctuation\">,</span> FFT_SIZE<span class=\"token punctuation\">,</span> M_SAMPLES_PER_SECOND <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Post-decimate signal (</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>bin_size_1<span class=\"token punctuation\">:</span><span class=\"token format-spec\">02.3f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> kHz)\"</span></span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'frequency (MHz)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'time (us)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Bin size (no pre-processing): </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>bin_size_0<span class=\"token punctuation\">}</span></span><span class=\"token string\"> kHz'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Bin size (with pre-processing): </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>bin_size_1<span class=\"token punctuation\">:</span><span class=\"token format-spec\">02.3f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> kHz'</span></span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<img src=\"/_/2020/06/18/freq-shift_files/freq-shift_11_0.png\" alt=\"png\">\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">Bin size (no pre-processing): 48.828125 kHz\nBin size (with pre-processing): 16.276 kHz</code></pre></div>\n<h3 id=\"cutting-off-the-edges\">Cutting off the edges</h3>\n<p>You can see how the sub-120 MHz signals get aliased in by the “checkmark”\nover the 1500 tick. This is why we want padding below 125MHz and above\n175MHz. However, the aliasing stays below 10 MHz on this spectrogram (125 MHz\non the original). So, we’ll just zoom in on the center and pretend the\nupper and lower bands don’t exist and pretend the\naxes are the correct “original” values.</p>\n<div class=\"remark-highlight\"><pre class=\"language-python\"><code class=\"language-python\">plt<span class=\"token punctuation\">.</span>specgram<span class=\"token punctuation\">(</span>decimate<span class=\"token punctuation\">,</span> FFT_SIZE<span class=\"token punctuation\">,</span> M_SAMPLES_PER_SECOND <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylim<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Final signal that we will use\"</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'frequency (MHz)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'time (us)'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<img src=\"/_/2020/06/18/freq-shift_files/freq-shift_13_0.png\" alt=\"png\">\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>In this post we have designed a method of pre-processing a signal so that performing a FFT on it later will be more precise and have smaller bins. If I continue working on this project, I’ll post updates and make a project page for it.</p>\n<h2 id=\"license\">License</h2>\n<p>Copyright (c) 2020 Astrid Yu. This code is licensed under <a href=\"https://www.gnu.org/licenses/agpl-3.0.en.html\">GNU AGPL</a>.</p>","tags":["computer-engineering","dsp","fpgas","jupyter","math","matplotlib","notes","numpy","python","scikit-learn"]}},"__N_SSG":true}