{"pageProps":{"post":{"id":10,"assetRoot":"2020/12/20","thumbnail":null,"title":"Adding a Backend to astrid.tech","description":"You thought I was done with this website?","slug":"backend","date":"2020-12-20T00:00:00.000Z","content":"<p>My website currently only has a frontend. Now, that’s cool and all, but I want my website to be fancier than that, and have more user interactability that I can customize.</p>\n<p>Okay, yes, there’s no one visiting my site to begin with, but that won’t stop me from wasting my time on this!</p>\n<p>Some tasks, like commenting and analytics, are currently delegated to others (Disqus and Google Analytics to be precise). However, those services often track users and harvest their data. And plus, it would be fun and to code those features in myself. With all these in mind, that’s why I’m building a backend.</p>\n<h2 id=\"planned-features\">Planned Features</h2>\n<p>I want to add the following features when I release it:</p>\n<ul>\n<li>A login system that supports signing in with other providers, like Google or Github</li>\n<li>Self-hosted commenting</li>\n<li>A thing that tracks how many hits my pages get, so that I can display that on the page</li>\n</ul>\n<p>Later on, I want to add more server-enhanced features:</p>\n<ul>\n<li>Blogging that’s faster than running a full rebuild of the site</li>\n<li>Webmentions? IndieAuth?</li>\n<li>Fun analytics stuff.</li>\n<li>A full social media feed aggregator that tracks everything I post (not that I even post that much, though…)</li>\n<li>Maybe even a forum system! (Or I could just roll a Mastodon instance and call it a day. Or both…)</li>\n</ul>\n<p>I’m also thinking of adding some other stuff to the server besides just a website backend. For example, a Minecraft server, or a Mastodon server.</p>\n<h2 id=\"the-technical-crap\">The technical crap</h2>\n<h3 id=\"deployment-and-repo-organization\">Deployment and repo organization</h3>\n<p>The backend is currently on the <code>backend</code> branch of my git repo, located in the <code>astrid_tech_api</code> subfolder. It’s written in Django, and I’ll have an app for each major responsibility. Currently, I’m mostly working on commenting. I tried to build an authentication system, but I may have gone slightly overkill in that.</p>\n<p>In terms of deployment, I’ll keep the frontend on Github Pages so I can leech off of Microsoft’s hosting.</p>\n<p>For the backend, I’m looking at <a href=\"https://contabo.com/\">Contabo</a>, because their rates look way better than anyone else I’ve seen. Their cheapest service is €4/mo ($4.89/mo) and it gives you 2 cores, 4GB RAM, and 300GB hybrid drive storage! It’s in Germany, however, which has 137ms latency from where I live, so that might not be the best. Their cheapest US-based service is €6/mo ($7.34/mo).</p>\n<p>Even though I’m running containers, I’m avoiding container hosting because I’m really cheap and I don’t really care much for scalability. Plus, I want the experience of managing a server myself. I’m planning on Dockerizing my backend and deploying it with either docker-compose or Kubernetes. So far, docker-compose seems a lot easier to use, but Kubernetes may be a bit more commonplace in the tech industry.</p>\n<img src=\"/_/2020/12/20/870a17808335a3153c16fa3ac70123a51c73e6f4.svg\" title=\"&#x60;dot&#x60; image\">\n<h3 id=\"replacing-gatsby\">Replacing Gatsby?</h3>\n<p>With this new backend coming in, I’m also considering moving to a new frontend framework. Essentially, Gatsby has a lot of issues with it. One of them is the long build times, which is worsened by how unreliable the cache is with my several custom plugins. Most of the runtime seems to be in generating images, but it might not be doing it very optimally; when it generates images, my CPU isn’t being 100% used.</p>\n<img src=\"/_/2020/12/20/gatsby-build-ci.png\" alt=\"Wow, these are very long build times, I wonder what could be causing it?\">\n<img src=\"/_/2020/12/20/gatsby-build.png\" alt=\"Image generation. It&#x27;s all image generation.\">\n<p>I wrote the following script to limit the size of every image in my repository to 1600x1600, but that only reduced build time by 30 seconds.</p>\n<div class=\"remark-highlight\"><pre class=\"language-sh\"><code class=\"language-sh\">maxsize () {\n  convert $1 -resize 1600x1600\\&#x26;gt; $1\n}\n\nfor file in $(find content assets -type f \\( -iname &#x26;quot;*.jpg&#x26;quot; -o -iname &#x26;quot;*.png&#x26;quot; -o -iname &#x26;quot;*.jpeg&#x26;quot; \\) )\ndo\n  echo $file\n  maxsize $file\ndone</code></pre></div>\n<p>The other issue is that it’s <a href=\"https://twitter.com/tesseralis/status/1293649007739191296\">run by a sketchy company</a> with a somewhat racist, sexist, and transphobic record, so I feel like I’d want to transition my own website off of that.</p>\n<p>Using Next.js and building my own thumbnail generation/data pull system seems like the most logical alternative because:</p>\n<ol>\n<li>It uses React, so I don’t have to throw away all my components.</li>\n<li>It’s also statically generated so I can keep my site fast. Plus, there’s an option for server-side rendering, allowing potentially faster updates if I choose to use it in the future.</li>\n<li>It doesn’t prescribe for you a data sourcing system to use, meaning I can write a custom data pulling/processing system that’s more optimized for my site.</li>\n<li>I don’t really see anything <em>too</em> massively controversial about Next.js from a quick Google search.</li>\n</ol>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>I will admit, I’m essentially taking a jackhammer to a nail for this entire solution. I’m only running a single server, there really isn’t a need for Kubernetes. Heck, even Docker is somewhat overkill for this. However, I’m doing all this to learn DevOps technologies that I’ve never used before, stepping outside of my comfort zone, because I’m curious about them.</p>\n<p>It’s gonna be an interesting experience to add this in, because I’m essentially taking an established product and adding functionality to it while maintaining it. I’m essentially a one-woman end-to-end software development team. So, I’m fairly hopeful for this server setup, and I hope to get it out within the next few weeks.</p>","tags":["/projects/astrid-tech/","django","docker","gatsby-js","kubernetes","next-js","python"]}},"__N_SSG":true}